Index: templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/styles/styles.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/styles/background.css\" />\n    <script type=\"text/javascript\" src=\"./static/js/main.js\"></script>\n{#            fontawesome CDN#}\n    <script src=\"https://kit.fontawesome.com/d8cab73848.js\" crossorigin=\"anonymous\"></script>\n    <title>around space</title>\n\n</head>\n\n<body>\n    <div class=\"stars\"></div>\n    <div class=\"twinkling\"></div>\n<div id=\"main\">\n    <div id=\"header\">\n        <div class=\"logo-wrapper\">\n        <p id=\"logo\">Around Space</p>\n        </div>\n        <div class=\"add-icon-wrapper\">\n        <i class=\"far fa-plus-square header-icon fa-3x\"></i>\n        </div>\n    </div>\n    <div id=\"container\">\n        <div id=\"story-container\">\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-on\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-on\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n        </div>\n        <div id=\"post-container\">\n            <div class=\"post-wrapper\">\n                <div class=\"post-header\">\n                    <div class=\"left-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\"/>\n                        <p>이용자5</p>\n                    </div>\n                    <div class=\"right-wrapper\">\n                        <img src=\"/static/img/more@3x.png\">\n                    </div>\n                </div>\n                <div class=\"post-body\">\n                    <div class=\"post-img\">\n                    <img src=\"/static/img/xmas.jpeg\">\n                        </div>\n                    <div class=\"post-icons-wrapper\">\n                        <div class=\"left-wrapper\">\n                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->\n                            <i class=\"far fa-heart post-icon fa-3x\"></i>\n                            <i class=\"far fa-comment post-icon-2 fa-3x\"></i>\n                            <i class=\"far fa-paper-plane post-icon-3 fa-3x\"></i>\n                        </div>\n                        <div class=\"right-wrapper\">\n                            <i class=\"far fa-star fa-3x\"></i>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"post-footer\">\n                    <div class=\"post-like-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\">\n                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>\n                    </div>\n                    <div class=\"post-content-wrapper\">\n                        <p class=\"post-author\">이용자</p>\n                        <p class=\"post-content\">안녕하세요</p>\n                    </div>\n                    <p class=\"post-time\">\n                        8시간 전\n                    </p>\n                </div>\n            </div>\n            <div class=\"post-wrapper\">\n                <div class=\"post-header\">\n                    <div class=\"left-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\"/>\n                        <p>이용자5</p>\n                    </div>\n                    <div class=\"right-wrapper\">\n                        <img src=\"/static/img/more@3x.png\">\n                    </div>\n                </div>\n                <div class=\"post-body\">\n                      <div class=\"post-img\">\n                    <img src=\"/static/img/xmas.jpeg\">\n                      </div>\n                    <div class=\"post-icons-wrapper\">\n                        <div class=\"left-wrapper\">\n                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->\n                            <i class=\"far fa-heart post-icon fa-3x\"></i>\n                            <i class=\"far fa-comment post-icon-2 fa-3x\"></i>\n                            <i class=\"far fa-paper-plane post-icon-3 fa-3x\"></i>\n                        </div>\n                        <div class=\"right-wrapper\">\n                               <i class=\"far fa-star fa-3x\"></i>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"post-footer\">\n                    <div class=\"post-like-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\">\n                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>\n                    </div>\n                    <div class=\"post-content-wrapper\">\n                        <p class=\"post-author\">이용자</p>\n                        <p class=\"post-content\">안녕하세요</p>\n                    </div>\n                    <p class=\"post-time\">\n                        8시간 전\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div id=\"footer\">\n        <div id=\"icon-wrapper\">\n            <img src=\"/static/img/home@3x.png\">\n            <img src=\"/static/img/search@3x.png\">\n            <img src=\"/static/img/trending@3x.png\">\n            <img src=\"/static/img/like@3x.png\">\n            <div onclick=\"go_profile()\">\n                <img src=\"/static/img/home@3x.png\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</body>\n\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/index.html b/templates/index.html
--- a/templates/index.html	(revision 000891c870a8a64d708616ca7068696e06ac40f9)
+++ b/templates/index.html	(date 1640849852553)
@@ -29,125 +29,9 @@
         </div>
     </div>
     <div id="container">
-        <div id="story-container">
-            <div class="story-wrapper">
-                <div class="story-off">
-                    <img src="/static/img/xmas1.jpeg"/>
-                </div>
-                <p>내 스토리</p>
-            </div>
-            <div class="story-wrapper">
-                <div class="story-on">
-                    <img src="/static/img/xmas1.jpeg"/>
-                </div>
-                <p>내 스토리</p>
-            </div>
-            <div class="story-wrapper">
-                <div class="story-on">
-                    <img src="/static/img/xmas1.jpeg"/>
-                </div>
-                <p>내 스토리</p>
-            </div>
-            <div class="story-wrapper">
-                <div class="story-off">
-                    <img src="/static/img/xmas1.jpeg"/>
-                </div>
-                <p>내 스토리</p>
-            </div>
-            <div class="story-wrapper">
-                <div class="story-off">
-                    <img src="/static/img/xmas1.jpeg"/>
-                </div>
-                <p>내 스토리</p>
-            </div>
-            <div class="story-wrapper">
-                <div class="story-off">
-                    <img src="/static/img/xmas1.jpeg"/>
-                </div>
-                <p>내 스토리</p>
-            </div>
-        </div>
+
         <div id="post-container">
-            <div class="post-wrapper">
-                <div class="post-header">
-                    <div class="left-wrapper">
-                        <img src="/static/img/xmas1.jpeg"/>
-                        <p>이용자5</p>
-                    </div>
-                    <div class="right-wrapper">
-                        <img src="/static/img/more@3x.png">
-                    </div>
-                </div>
-                <div class="post-body">
-                    <div class="post-img">
-                    <img src="/static/img/xmas.jpeg">
-                        </div>
-                    <div class="post-icons-wrapper">
-                        <div class="left-wrapper">
-                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->
-                            <i class="far fa-heart post-icon fa-3x"></i>
-                            <i class="far fa-comment post-icon-2 fa-3x"></i>
-                            <i class="far fa-paper-plane post-icon-3 fa-3x"></i>
-                        </div>
-                        <div class="right-wrapper">
-                            <i class="far fa-star fa-3x"></i>
-                        </div>
-                    </div>
-                </div>
-                <div class="post-footer">
-                    <div class="post-like-wrapper">
-                        <img src="/static/img/xmas1.jpeg">
-                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>
-                    </div>
-                    <div class="post-content-wrapper">
-                        <p class="post-author">이용자</p>
-                        <p class="post-content">안녕하세요</p>
-                    </div>
-                    <p class="post-time">
-                        8시간 전
-                    </p>
-                </div>
-            </div>
-            <div class="post-wrapper">
-                <div class="post-header">
-                    <div class="left-wrapper">
-                        <img src="/static/img/xmas1.jpeg"/>
-                        <p>이용자5</p>
-                    </div>
-                    <div class="right-wrapper">
-                        <img src="/static/img/more@3x.png">
-                    </div>
-                </div>
-                <div class="post-body">
-                      <div class="post-img">
-                    <img src="/static/img/xmas.jpeg">
-                      </div>
-                    <div class="post-icons-wrapper">
-                        <div class="left-wrapper">
-                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->
-                            <i class="far fa-heart post-icon fa-3x"></i>
-                            <i class="far fa-comment post-icon-2 fa-3x"></i>
-                            <i class="far fa-paper-plane post-icon-3 fa-3x"></i>
-                        </div>
-                        <div class="right-wrapper">
-                               <i class="far fa-star fa-3x"></i>
-                        </div>
-                    </div>
-                </div>
-                <div class="post-footer">
-                    <div class="post-like-wrapper">
-                        <img src="/static/img/xmas1.jpeg">
-                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>
-                    </div>
-                    <div class="post-content-wrapper">
-                        <p class="post-author">이용자</p>
-                        <p class="post-content">안녕하세요</p>
-                    </div>
-                    <p class="post-time">
-                        8시간 전
-                    </p>
-                </div>
-            </div>
+
         </div>
     </div>
     <div id="footer">
Index: static/js/main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    $(document).ready(function () {\n    get_feed();\n});\n        //feed 는 메인 화면에 들어갈 post를 받아서 뿌리는 역할입니다\n         function get_feed() {\n            $.ajax({\n                type: 'GET',\n                url: '/api/feed',\n                data: {},\n                success: function (response) {\n                    let row = JSON.parse(response)\n\n                }\n            })\n             //여기다가 포스트 html 을 foreach\n        }\n\n        //로그인한 유저의 이름을 보내준다\n        function go_profile(){\n             window.location.href=`/profile?username=${'123'}` //일단은 123으로 보내준다\n        }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/main.js b/static/js/main.js
--- a/static/js/main.js	(revision 000891c870a8a64d708616ca7068696e06ac40f9)
+++ b/static/js/main.js	(date 1640843510302)
@@ -1,21 +1,67 @@
-    $(document).ready(function () {
+$(document).ready(function () {
     get_feed();
 });
-        //feed 는 메인 화면에 들어갈 post를 받아서 뿌리는 역할입니다
-         function get_feed() {
-            $.ajax({
-                type: 'GET',
-                url: '/api/feed',
-                data: {},
-                success: function (response) {
-                    let row = JSON.parse(response)
+
+//feed 는 메인 화면에 들어갈 post를 받아서 뿌리는 역할입니다
+function get_feed() {
+    $.ajax({
+        type: 'GET',
+        url: '/api/feed',
+        data: {},
+        success: function (response) {
+            let rows = JSON.parse(response)
+            for (let i = 0; i < rows.length; i++){
+                let post_photo = rows[i]['post_photo']
+                let post_photo_content = rows[i]['post_photo_content']
+                let username = rows[i]['user']['username']
+                let profile_photo = rows[i]['user']['profile_photo']
+
+                // console.log(response)
+                let temp_html = `<div class="post-wrapper">
+                                     <div class="post-header">
+                                        <div class="left-wrapper">
+                                            <img src="${profile_photo}"/>
+                                            <p>${username}</p>
+                                        </div>
+                                        <div class="right-wrapper">
+                                            <img src="/static/img/more@3x.png">
+                                        </div>
+                                    </div>
+                                    <div class="post-body">
+                                        <div class="post-img">
+                                        <img src="${post_photo}">
+                                            </div>
+                                        <div class="post-icons-wrapper">
+                                            <div class="left-wrapper">
+
+                                                <img class="post-icon" src="/static/img/like@3x.png">
+                                                <img class="post-icon-2" src="/static/img/comment@3x.png">
+                                                <img class="post-icon" src="/static/img/dm@3x.png">
+                                            </div>
+                                            <div class="right-wrapper">
+                                                <img src="/static/img/favorite@3x.png">
+                                            </div>
+                                        </div>
+                                    </div>
+                                    <div class="post-footer">
+                                        <div class="post-like-wrapper">
+                                            <img src="${profile_photo}">
+                                            <p><strong>${username}</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>
+                                        </div>
+                                        <div class="post-content-wrapper">
+                                            <p class="post-author">${username}</p>
+                                            <p class="post-content">${post_photo_content}</p>
+                                        </div>
+                                        <p class="post-time">
+                                            8시간 전
+                                        </p>
+                                    </div>
+                                </div>`
+
+                $('#post-container').append(temp_html)
 
-                }
-            })
-             //여기다가 포스트 html 을 foreach
-        }
-
-        //로그인한 유저의 이름을 보내준다
-        function go_profile(){
-             window.location.href=`/profile?username=${'123'}` //일단은 123으로 보내준다
-        }
\ No newline at end of file
+            }
+        }
+    });
+    //여기다가 포스트 html 을 foreach
+}
\ No newline at end of file
Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, request, jsonify, redirect, url_for,send_file\nfrom pymongo import MongoClient\nimport certifi\n\nca = certifi.where()\n\nclient = MongoClient('mongodb+srv://space:space123@cluster0.gpjhq.mongodb.net/Cluster0?retryWrites=true&w=majority',\n                     tlsCAFile=ca)\n\ndb = client.dbSpace\n\napp = Flask(__name__)\n\nSECRET_KEY = '3iI3j63EmUww246bXHUVghUnYkTwQ6lm'\n\n# JWT 패키지를 사용합니다. (설치해야할 패키지 이름: PyJWT)\nimport jwt\n\n# 토큰에 만료시간을 줘야하기 때문에, datetime 모듈도 사용합니다.\nimport datetime\n\nimport io\n\n#################################\n##  이미지 파일 전송부분            ##\n#################################\n\nimport gridfs\n\n\n@app.route('/api/fileupload', methods=['POST'])\ndef upload_file():\n    f = request.data\n    fs = gridfs.GridFS(db)\n    imageId = fs.put(f)\n    print(f)\n    print('imageid:', imageId)\n\n    doc = {\n        'name': 'ddd',\n        'file': imageId\n    }\n\n    db.data.insert_one(doc)\n\n    return jsonify({'result': 'success'})\n\n\n@app.route('/api/readimage', methods=['GET'])\ndef read_image():\n    data = db.data.find_one({'name': 'ddd'})\n    fs = gridfs.GridFS(db)\n    data = data['file']\n    data = fs.get(data)\n    print(data)\n    data = data.read()\n    print('ddd', io.BytesIO(data).read())\n    # return send_file(io.BytesIO(data), mimetype='image.png', as_attachment=True, attachment_filename='%s.png' % 'fds')\n    return send_file(io.BytesIO(data), mimetype='image.png')\n\n\nimport hashlib\n\nimport json\nfrom bson import ObjectId\n\n\nclass JSONEncoder(json.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, ObjectId):\n            return str(o)\n        return json.JSONEncoder.default(self, o)\n\n\n#################################\n##  HTML을 주는 부분             ##\n#################################\n@app.route('/')\ndef home():\n    # # 현재 이용자의 컴퓨터에 저장된 cookie 에서 mytoken 을 가져옵니다.\n    token_receive = request.cookies.get('token')\n    try:\n         # token을 decode하여 payload를 가져오고, payload 안에 담긴 유저 id를 통해 DB에서 유저의 정보를 가져옵니다.\n         payload = jwt.decode(token_receive, SECRET_KEY, algorithms=['HS256'])\n         user_info = db.user.find_one({\"id\": payload['id']})\n         return render_template('index.html', user = user_info)  \n\n    # # 만약 해당 token의 로그인 시간이 만료되었다면, 아래와 같은 코드를 실행합니다.\n    except jwt.ExpiredSignatureError:\n        return redirect(url_for(\"login\", msg=\"로그인 시간이 만료되었습니다.\"))\n        # 만약 해당 token이 올바르게 디코딩되지 않는다면, 아래와 같은 코드를 실행합니다.\n    except jwt.exceptions.DecodeError:\n        return redirect(url_for(\"login\", msg=\"로그인 정보가 존재하지 않습니다.\"))\n\n\n\n# mongodb에서 원하는 조건의 데이터를 불러왔습니다. 이후 filter를 통해서 가져오는 방식으로 조건을 줄 생각입니다.\n@app.route('/profile')\ndef profile():\n    # myname = \"seunghwan\"\n    # myphoto = \"photo\"\n    # return render_template(\"profile.html\", name=myname, photo=myphoto)\n    user = db.users.find_one({'username': '123'}, {'_id': False})\n    return render_template('profile.html', user=user)\n\n\n@app.route('/posting')\ndef posting():\n    return render_template('create_post.html')\n\n\n#################################\n##  로그인을 위한 API            ##\n#################################\n\n# [회원가입 API]\n# id, pw, nickname을 받아서, mongoDB에 저장합니다.\n# 저장하기 전에, pw를 sha256 방법(=단방향 암호화. 풀어볼 수 없음)으로 암호화해서 저장합니다.\n@app.route('/register', methods=['GET','POST'])\ndef register():\n    if request.method == \"POST\":\n        data = request.json    \n\n        pw_hash = hashlib.sha256(data[\"pw\"].encode('utf-8')).hexdigest()\n        \n        doc = {\n            \"id\": data[\"id\"],\n            \"pw\": pw_hash,\n            \"email\": data[\"email\"],\n            \"img\" : data[\"img\"]\n        }\n\n        db.users.insert_one(doc)\n\n        return jsonify({\"result\" : \"어라운드 스페이스의 멤버가 되신 것을 축하합니다!\"})\n    else:\n        return render_template('regist.html')\n\n# [로그인 API]\n# id, pw를 받아서 맞춰보고, 토큰을 만들어 발급합니다.\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    \n    if request.method == 'POST':\n        data = request.json\n        # PW hash: DB에 hash값으로 저장했기 때문에 다시 hash값으로 전환해 조회합니다.\n        pw_hash = hashlib.sha256(data[\"pw\"].encode(\"utf-8\")).hexdigest()\n        # find query\n        info = {\"id\" : data[\"id\"], \"pw\": pw_hash}        \n        user = db.users.find_one(info)       \n        # token issue: 토큰을 발행하고, ajax response에서 사용자 쿠키에 토큰을 저장합니다.\n        if user != None:\n            payload = {\n                \"id\": data[\"id\"],\n                \"exp\": datetime.datetime.utcnow() + datetime.timedelta(seconds=60 * 60 * 24)\n            }            \n            token = jwt.encode(payload, SECRET_KEY, algorithm='HS256')  \n                      \n            return jsonify({\"result\" : \"success\", \"token\" : token})        \n        else:\n            return jsonify({\"msg\" : \"회원 정보가 없습니다.\"})    \n    else:\n        msg = request.args.get(\"msg\")\n        return render_template('login.html', msg=msg)\n\n\n# [아이디 중복확인 API]\n# 유저 인풋으로 받은 계정을 DB에서 조회하고, 이미 존재하면 True 반환합니다.\n@app.route(\"/register/check_id\", methods = [\"POST\"])\ndef check_id():\n    id = request.form['id']\n    duplicated_id = db.users.find_one({'id':id})\n\n    return jsonify({\"duplicated\" : bool(duplicated_id)}) \n\n# [유저 정보 확인 API]\n# 로그인된 유저만 call 할 수 있는 API입니다.\n# 유효한 토큰을 줘야 올바른 결과를 얻어갈 수 있습니다.\n# (그렇지 않으면 남의 장바구니라든가, 정보를 누구나 볼 수 있겠죠?)\n@app.route('/api/nick', methods=['GET'])\ndef api_valid():\n    token_receive = request.cookies.get('mytoken')\n\n    # try / catch 문?\n    # try 아래를 실행했다가, 에러가 있으면 except 구분으로 가란 얘기입니다.\n\n    try:\n        # token을 시크릿키로 디코딩합니다.\n        # 보실 수 있도록 payload를 print 해두었습니다. 우리가 로그인 시 넣은 그 payload와 같은 것이 나옵니다.\n        payload = jwt.decode(token_receive, SECRET_KEY, algorithms=['HS256'])\n        print(payload)\n\n        # payload 안에 id가 들어있습니다. 이 id로 유저정보를 찾습니다.\n        # 여기에선 그 예로 닉네임을 보내주겠습니다.\n        userinfo = db.user.find_one({'id': payload['id']}, {'_id': False})\n        return jsonify({'result': 'success', 'nickname': userinfo['nick']})\n    except jwt.ExpiredSignatureError:\n        # 위를 실행했는데 만료시간이 지났으면 에러가 납니다.\n        return jsonify({'result': 'fail', 'msg': '로그인 시간이 만료되었습니다.'})\n    except jwt.exceptions.DecodeError:\n        return jsonify({'result': 'fail', 'msg': '로그인 정보가 존재하지 않습니다.'})\n\n    #################################\n    ##  메인화면을 위한 API            ##\n    #################################\n\n\n@app.route('/api/feed', methods=['GET'])\ndef api_feed():\n    all_feed = list(db.posts.find({}, {'_id': 0}))\n    jsonfeed = JSONEncoder().encode(all_feed)\n    return jsonify(jsonfeed)\n\n\n@app.route('/api/posting', methods=['POST'])\ndef create_post():\n    url_receive = request.form['url_give']\n    title_receive = request.form['title_give']\n    doc = {\n        'title': title_receive,\n        'photo': url_receive,\n        'username': '123',\n    }\n    db.posts.insert_one(doc)\n    return jsonify({'msg': \"저장 완료\"})\n\n    #################################\n    ##  프로필화면을 위한 API            ##\n    #################################\n\n\nif __name__ == '__main__':\n    app.run('0.0.0.0', port=5002, debug=True)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 000891c870a8a64d708616ca7068696e06ac40f9)
+++ b/app.py	(date 1640846231329)
@@ -82,7 +82,7 @@
     try:
          # token을 decode하여 payload를 가져오고, payload 안에 담긴 유저 id를 통해 DB에서 유저의 정보를 가져옵니다.
          payload = jwt.decode(token_receive, SECRET_KEY, algorithms=['HS256'])
-         user_info = db.user.find_one({"id": payload['id']})
+         user_info = db.users.find_one({"id": payload['id']})
          return render_template('index.html', user = user_info)  
 
     # # 만약 해당 token의 로그인 시간이 만료되었다면, 아래와 같은 코드를 실행합니다.
@@ -176,7 +176,7 @@
 # [유저 정보 확인 API]
 # 로그인된 유저만 call 할 수 있는 API입니다.
 # 유효한 토큰을 줘야 올바른 결과를 얻어갈 수 있습니다.
-# (그렇지 않으면 남의 장바구니라든가, 정보를 누구나 볼 수 있겠죠?)
+# (그렇지 않으면 남의 장바구니라든가, 정보를 누구나 볼 수 있겠죠?) 
 @app.route('/api/nick', methods=['GET'])
 def api_valid():
     token_receive = request.cookies.get('mytoken')
@@ -230,4 +230,4 @@
 
 
 if __name__ == '__main__':
-    app.run('0.0.0.0', port=5002, debug=True)
+    app.run('0.0.0.0', port=5001, debug=True)
