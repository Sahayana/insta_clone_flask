Index: static/styles/styles.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>* {\n    z-index: 2;\n}\n\np {\n    color: white;\n}\nbody {\n    max-width: 720px;\n    margin: 0 auto;\n}\n\n/* 헤더 */\n#header {\n    display: flex;\n    justify-content: center;\n    background-color: black;\n    align-items: center;\n    width: 100%;\n    position: fixed;\n    max-width: 720px;\n    border-bottom: 1px solid gray;\n}\n\n\n#header #logo {\n    /*Ballet Harmony 폰트를 다운 받아야 합니다. */\n    /*다운로드 링크 : https://www.dafont.com/ballet-harmony.font*/\n    font-family: Ballet Harmony;\n    font-size: 55px;\n    background-image: linear-gradient(100deg, deeppink, coral, greenyellow, deepskyblue, blue, purple);\n    -webkit-background-clip: text;\n    color: transparent;\n}\n\n#logo:hover, #logo:focus { animation-duration: 3s; animation-name: rainbowLink; animation-iteration-count: infinite; animation-timing-function: ease-in; }\n@keyframes rainbowLink {\n 0% { color: deeppink;}\n 15% { color: coral; }\n 30% { color: yellow; }\n 45% { color: yellowgreen; }\n 60% { color: deepskyblue; }\n 75% { color: purple; }\n 90% { color: #6b2aff; }\n 100% { color: #e82aff; }\n}\n\n/* 컨테이너 */\n#container {\n    padding-top: 12%;\n    padding-bottom: 12%;\n}\n\n/* 스토리 */\n#story-container {\n    z-index: 1;\n    padding-left: 1%;\n    background-color: black;\n    display: flex;\n    position: relative;\n    justify-content: flex-start;\n    align-items: center;\n    overflow: hidden;\n\n}\n\n.story-wrapper {\n    width: auto;\n    margin: 2.5% 3.2%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n}\n\n.story-wrapper .story-on {\n    width: 13vw;\n    max-width: 80px;\n    max-height: 80px;\n    height: 13vw;\n    border: 2px solid transparent;\n    border-radius: 50%;\n    background-image: linear-gradient(#f6f6f6, #f6f6f6),\n    linear-gradient(to right, #ff7700, #ff3636aa, #ff00c3);\n    background-origin: border-box;\n    background-clip: content-box, border-box;\n}\n\n.story-wrapper .story-off {\n    width: 13vw;\n    max-width: 80px;\n    max-height: 80px;\n    height: 13vw;\n    border: 2px solid transparent;\n    border-radius: 50%;\n    background-image: linear-gradient(#f6f6f6, #f6f6f6),\n    linear-gradient(#c4c4c4, #c4c4c4);\n    background-origin: border-box;\n    background-clip: content-box, border-box;\n}\n\n.story-wrapper img {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n}\n\n.story-wrapper p {\n    margin-top: 10%;\n    margin-bottom: 0%;\n    font-size: 12px;\n}\n\n/* 포스트 - 공통 */\n.left-wrapper {\n    margin-left: 3%;\n    display: flex;\n    align-items: center;\n    width: 100%;\n}\n\n.right-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: right;\n    margin-right: 3%;\n\n}\n\n/* 포스트 - 헤더 */\n\n.post-header {\n    position: relative;\n    z-index: 1;\n    margin: 1% 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-top: 1px solid gray;\n    width: 100%;\n}\n\n.post-header .left-wrapper img {\n    width: 15%;\n    height: 15%;\n    border-radius: 50%;\n    border: 1px solid lightgray;\n    margin: 0 2%;\n}\n\n.post-header .left-wrapper p {\n    margin-left: 2%;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n\n\n/* 포스트 - 바디 */\n\n.post-body .post-img {\n\n\n}\n\n.post-img > img {\n    z-index: 1;\n    position: relative;\n    width: 100%;\n    height: 500px;\n    object-fit: cover;\n\n}\n\n.post-body .post-icons-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 1%;\n}\n\n/* 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 그냥 img 로 처리하는게 맞습니다! */\n.post-body .post-icons-wrapper .left-wrapper .post-icon {\n    margin: 2% 4%;\n    width: 14%;\n\n}\n\n.post-body .post-icons-wrapper .left-wrapper .post-icon-2 {\n    margin: 2% 4%;\n    width: 13%;\n}\n\n.post-body .post-icons-wrapper .right-wrapper img {\n    margin: 2% 4%;\n    width: 11%;\n}\n\n/* 포스트 - 푸터 */\n.post-footer {\n    margin-bottom: 4%;\n    position: relative;\n    background-color: black;\n    padding-left: 2%;\n    z-index: 1;\n}\n\n.post-footer .post-like-wrapper {\n\n    display: flex;\n    align-items: center;\n    margin-left: 1%;\n    margin-top: 1%;\n    margin-bottom: 1%;\n}\n\n.post-footer .post-like-wrapper img {\n    width: 6%;\n    height: 6%;\n    border-radius: 50%;\n    border: 1px solid lightgray;\n    margin: 0 1%;\n}\n\n.post-footer .post-like-wrapper p {\n    margin-bottom: 2%;\n    margin-top: 2%;\n    font-size: 14px;\n}\n\n.post-footer .post-content-wrapper {\n    display: flex;\n}\n\n.post-footer .post-content-wrapper .post-author {\n    margin: 0% 2% 0% 2%;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n.post-footer .post-content-wrapper .post-content {\n    margin: 0%;\n    font-size: 14px;\n}\n\n.post-footer .post-time {\n    color: gray;\n    font-size: 10px;\n    margin-left: 2%;\n    margin-top: 5%;\n}\n\n/* 푸터 */\n#footer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    max-width: 720px;\n    border-top: 1px solid gray;\n    background-color: black;\n}\n\n#footer #icon-wrapper {\n    margin: 4% 6%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#footer #icon-wrapper img {\n    width: 6%;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/styles/styles.css b/static/styles/styles.css
--- a/static/styles/styles.css	(revision 2d1b2710c2e4ce42a195ba8b7d92e74ffff8679d)
+++ b/static/styles/styles.css	(date 1640838023652)
@@ -141,11 +141,13 @@
 }
 
 .post-header .left-wrapper img {
-    width: 15%;
-    height: 15%;
+    width: 5vw;
+    height: 5vw;
+    max-width: 50px;
+    max-height: 50px;
     border-radius: 50%;
     border: 1px solid lightgray;
-    margin: 0 2%;
+    margin: 3% 2%;
 }
 
 .post-header .left-wrapper p {
@@ -216,8 +218,10 @@
 }
 
 .post-footer .post-like-wrapper img {
-    width: 6%;
-    height: 6%;
+    width: 3vw;
+    height: 3vw;
+    max-width: 30px;
+    max-height: 30px;
     border-radius: 50%;
     border: 1px solid lightgray;
     margin: 0 1%;
Index: templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/styles/styles.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/styles/background.css\" />\n    <script type=\"text/javascript\" src=\"./static/js/main.js\"></script>\n    <title>around space</title>\n\n</head>\n\n<body>\n    <div class=\"stars\"></div>\n    <div class=\"twinkling\"></div>\n<div id=\"main\">\n    <div id=\"header\">\n        <img class=\"header-icon\" src=\"/static/img/camera@3x.png\"/>\n        <p id=\"logo\">Around Space</p>\n        <img class=\"header-icon\" src=\"/static/img/dm@3x.png\"/>\n    </div>\n    <div id=\"container\">\n        <div id=\"story-container\">\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-on\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-on\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n            <div class=\"story-wrapper\">\n                <div class=\"story-off\">\n                    <img src=\"/static/img/xmas1.jpeg\"/>\n                </div>\n                <p>내 스토리</p>\n            </div>\n        </div>\n        <div id=\"post-container\">\n            <div class=\"post-wrapper\">\n                <div class=\"post-header\">\n                    <div class=\"left-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\"/>\n                        <p>이용자5</p>\n                    </div>\n                    <div class=\"right-wrapper\">\n                        <img src=\"/static/img/more@3x.png\">\n                    </div>\n                </div>\n                <div class=\"post-body\">\n                    <div class=\"post-img\">\n                    <img src=\"/static/img/xmas.jpeg\">\n                        </div>\n                    <div class=\"post-icons-wrapper\">\n                        <div class=\"left-wrapper\">\n                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->\n                            <img class=\"post-icon\" src=\"/static/img/like@3x.png\">\n                            <img class=\"post-icon-2\" src=\"/static/img/comment@3x.png\">\n                            <img class=\"post-icon\" src=\"/static/img/dm@3x.png\">\n                        </div>\n                        <div class=\"right-wrapper\">\n                            <img src=\"/static/img/favorite@3x.png\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"post-footer\">\n                    <div class=\"post-like-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\">\n                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>\n                    </div>\n                    <div class=\"post-content-wrapper\">\n                        <p class=\"post-author\">이용자</p>\n                        <p class=\"post-content\">안녕하세요</p>\n                    </div>\n                    <p class=\"post-time\">\n                        8시간 전\n                    </p>\n                </div>\n            </div>\n            <div class=\"post-wrapper\">\n                <div class=\"post-header\">\n                    <div class=\"left-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\"/>\n                        <p>이용자5</p>\n                    </div>\n                    <div class=\"right-wrapper\">\n                        <img src=\"/static/img/more@3x.png\">\n                    </div>\n                </div>\n                <div class=\"post-body\">\n                      <div class=\"post-img\">\n                    <img src=\"/static/img/xmas.jpeg\">\n                      </div>\n                    <div class=\"post-icons-wrapper\">\n                        <div class=\"left-wrapper\">\n                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->\n                            <img class=\"post-icon\" src=\"/static/img/like@3x.png\">\n                            <img class=\"post-icon-2\" src=\"/static/img/comment@3x.png\">\n                            <img class=\"post-icon\" src=\"/static/img/dm@3x.png\">\n                        </div>\n                        <div class=\"right-wrapper\">\n                            <img src=\"/static/img/favorite@3x.png\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"post-footer\">\n                    <div class=\"post-like-wrapper\">\n                        <img src=\"/static/img/xmas1.jpeg\">\n                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>\n                    </div>\n                    <div class=\"post-content-wrapper\">\n                        <p class=\"post-author\">이용자</p>\n                        <p class=\"post-content\">안녕하세요</p>\n                    </div>\n                    <p class=\"post-time\">\n                        8시간 전\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div id=\"footer\">\n        <div id=\"icon-wrapper\">\n            <img src=\"/static/img/home@3x.png\">\n            <img src=\"/static/img/search@3x.png\">\n            <img src=\"/static/img/trending@3x.png\">\n            <img src=\"/static/img/like@3x.png\">\n            <div onclick=\"go_profile()\">\n                <img src=\"/static/img/home@3x.png\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</body>\n\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/index.html b/templates/index.html
--- a/templates/index.html	(revision 2d1b2710c2e4ce42a195ba8b7d92e74ffff8679d)
+++ b/templates/index.html	(date 1640836931870)
@@ -63,86 +63,7 @@
             </div>
         </div>
         <div id="post-container">
-            <div class="post-wrapper">
-                <div class="post-header">
-                    <div class="left-wrapper">
-                        <img src="/static/img/xmas1.jpeg"/>
-                        <p>이용자5</p>
-                    </div>
-                    <div class="right-wrapper">
-                        <img src="/static/img/more@3x.png">
-                    </div>
-                </div>
-                <div class="post-body">
-                    <div class="post-img">
-                    <img src="/static/img/xmas.jpeg">
-                        </div>
-                    <div class="post-icons-wrapper">
-                        <div class="left-wrapper">
-                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->
-                            <img class="post-icon" src="/static/img/like@3x.png">
-                            <img class="post-icon-2" src="/static/img/comment@3x.png">
-                            <img class="post-icon" src="/static/img/dm@3x.png">
-                        </div>
-                        <div class="right-wrapper">
-                            <img src="/static/img/favorite@3x.png">
-                        </div>
-                    </div>
-                </div>
-                <div class="post-footer">
-                    <div class="post-like-wrapper">
-                        <img src="/static/img/xmas1.jpeg">
-                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>
-                    </div>
-                    <div class="post-content-wrapper">
-                        <p class="post-author">이용자</p>
-                        <p class="post-content">안녕하세요</p>
-                    </div>
-                    <p class="post-time">
-                        8시간 전
-                    </p>
-                </div>
-            </div>
-            <div class="post-wrapper">
-                <div class="post-header">
-                    <div class="left-wrapper">
-                        <img src="/static/img/xmas1.jpeg"/>
-                        <p>이용자5</p>
-                    </div>
-                    <div class="right-wrapper">
-                        <img src="/static/img/more@3x.png">
-                    </div>
-                </div>
-                <div class="post-body">
-                      <div class="post-img">
-                    <img src="/static/img/xmas.jpeg">
-                      </div>
-                    <div class="post-icons-wrapper">
-                        <div class="left-wrapper">
-                            <!-- 아이콘 크기가 달라서 부득이 하게 이렇게 만들었으나, 클래스 없이 img로 처리하는게 맞습니다! -->
-                            <img class="post-icon" src="/static/img/like@3x.png">
-                            <img class="post-icon-2" src="/static/img/comment@3x.png">
-                            <img class="post-icon" src="/static/img/dm@3x.png">
-                        </div>
-                        <div class="right-wrapper">
-                            <img src="/static/img/favorite@3x.png">
-                        </div>
-                    </div>
-                </div>
-                <div class="post-footer">
-                    <div class="post-like-wrapper">
-                        <img src="/static/img/xmas1.jpeg">
-                        <p><strong>이용자</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>
-                    </div>
-                    <div class="post-content-wrapper">
-                        <p class="post-author">이용자</p>
-                        <p class="post-content">안녕하세요</p>
-                    </div>
-                    <p class="post-time">
-                        8시간 전
-                    </p>
-                </div>
-            </div>
+
         </div>
     </div>
     <div id="footer">
Index: static/js/main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    $(document).ready(function () {\n    get_feed();\n});\n        //feed 는 메인 화면에 들어갈 post를 받아서 뿌리는 역할입니다\n         function get_feed() {\n            $.ajax({\n                type: 'GET',\n                url: '/api/feed',\n                data: {},\n                success: function (response) {\n                    let row = JSON.parse(response)\n\n                }\n            })\n             //여기다가 포스트 html 을 foreach\n        }\n\n        //로그인한 유저의 이름을 보내준다\n        function go_profile(){\n             window.location.href=`/profile?username=${'123'}` //일단은 123으로 보내준다\n        }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/js/main.js b/static/js/main.js
--- a/static/js/main.js	(revision 2d1b2710c2e4ce42a195ba8b7d92e74ffff8679d)
+++ b/static/js/main.js	(date 1640837546741)
@@ -1,21 +1,67 @@
-    $(document).ready(function () {
+$(document).ready(function () {
     get_feed();
 });
-        //feed 는 메인 화면에 들어갈 post를 받아서 뿌리는 역할입니다
-         function get_feed() {
-            $.ajax({
-                type: 'GET',
-                url: '/api/feed',
-                data: {},
-                success: function (response) {
-                    let row = JSON.parse(response)
+
+//feed 는 메인 화면에 들어갈 post를 받아서 뿌리는 역할입니다
+function get_feed() {
+    $.ajax({
+        type: 'GET',
+        url: '/api/feed',
+        data: {},
+        success: function (response) {
+            let rows = JSON.parse(response)
+            for (let i = 0; i < rows.length; i++){
+                let post_photo = rows[i]['post_photo']
+                let post_photo_content = rows[i]['post_photo_content']
+                let username = rows[i]['user']['username']
+                let profile_photo = rows[i]['user']['profile_photo']
+
+                // console.log(post_photo, post_photo_content, username, profile_photo)
+                let temp_html = `<div class="post-wrapper">
+                                     <div class="post-header">
+                                        <div class="left-wrapper">
+                                            <img src="${profile_photo}"/>
+                                            <p>${username}</p>
+                                        </div>
+                                        <div class="right-wrapper">
+                                            <img src="/static/img/more@3x.png">
+                                        </div>
+                                    </div>
+                                    <div class="post-body">
+                                        <div class="post-img">
+                                        <img src="${post_photo}">
+                                            </div>
+                                        <div class="post-icons-wrapper">
+                                            <div class="left-wrapper">
+                
+                                                <img class="post-icon" src="/static/img/like@3x.png">
+                                                <img class="post-icon-2" src="/static/img/comment@3x.png">
+                                                <img class="post-icon" src="/static/img/dm@3x.png">
+                                            </div>
+                                            <div class="right-wrapper">
+                                                <img src="/static/img/favorite@3x.png">
+                                            </div>
+                                        </div>
+                                    </div>
+                                    <div class="post-footer">
+                                        <div class="post-like-wrapper">
+                                            <img src="${profile_photo}">
+                                            <p><strong>${username}</strong>님 <strong>외 6,671명</strong>이 좋아합니다</p>
+                                        </div>
+                                        <div class="post-content-wrapper">
+                                            <p class="post-author">${username}</p>
+                                            <p class="post-content">${post_photo_content}</p>
+                                        </div>
+                                        <p class="post-time">
+                                            8시간 전
+                                        </p>
+                                    </div>
+                                </div>`
+
+                $('#post-container').append(temp_html)
 
-                }
-            })
-             //여기다가 포스트 html 을 foreach
-        }
-
-        //로그인한 유저의 이름을 보내준다
-        function go_profile(){
-             window.location.href=`/profile?username=${'123'}` //일단은 123으로 보내준다
-        }
\ No newline at end of file
+            }
+        }
+    });
+    //여기다가 포스트 html 을 foreach
+}
\ No newline at end of file
Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, request, jsonify, redirect, url_for\nfrom pymongo import MongoClient\nimport certifi\n\nca = certifi.where()\n\nclient = MongoClient('mongodb+srv://space:space123@cluster0.gpjhq.mongodb.net/Cluster0?retryWrites=true&w=majority',\n                     tlsCAFile=ca)\n\ndb = client.dbSpace\n\napp = Flask(__name__)\n\nSECRET_KEY = '3iI3j63EmUww246bXHUVghUnYkTwQ6lm'\n\n# JWT 패키지를 사용합니다. (설치해야할 패키지 이름: PyJWT)\nimport jwt\n\n# 토큰에 만료시간을 줘야하기 때문에, datetime 모듈도 사용합니다.\nimport datetime\n\n# 회원가입 시엔, 비밀번호를 암호화하여 DB에 저장해두는 게 좋습니다.\n# 그렇지 않으면, 개발자(=나)가 회원들의 비밀번호를 볼 수 있으니까요.^^;\nimport hashlib\n\nimport json\nfrom bson import ObjectId\n\n\nclass JSONEncoder(json.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, ObjectId):\n            return str(o)\n        return json.JSONEncoder.default(self, o)\n\n\n#################################\n##  HTML을 주는 부분             ##\n#################################\n@app.route('/')\ndef home():\n    # # 현재 이용자의 컴퓨터에 저장된 cookie 에서 mytoken 을 가져옵니다.\n    # token_receive = request.cookies.get('mytoken')\n    # try:\n    #     # 암호화되어있는 token의 값을 우리가 사용할 수 있도록 디코딩(암호화 풀기)해줍니다!\n    #     payload = jwt.decode(token_receive, SECRET_KEY, algorithms=['HS256'])\n    #     user_info = db.user.find_one({\"id\": payload['id']})\n    return render_template('index.html')  # , nickname=user_info[\"nick\"]\n\n\n# # 만약 해당 token의 로그인 시간이 만료되었다면, 아래와 같은 코드를 실행합니다.\n# except jwt.ExpiredSignatureError:\n#     return redirect(url_for(\"login\", msg=\"로그인 시간이 만료되었습니다.\"))\n#     # 만약 해당 token이 올바르게 디코딩되지 않는다면, 아래와 같은 코드를 실행합니다.\n# except jwt.exceptions.DecodeError:\n#     return redirect(url_for(\"login\", msg=\"로그인 정보가 존재하지 않습니다.\"))\n\n\n@app.route('/login')\ndef login():\n    msg = request.args.get(\"msg\")\n    return render_template('login.html', msg=msg)\n\n\n@app.route('/regist')\ndef register():\n    return render_template('regist.html')\n\n\n# mongodb에서 원하는 조건의 데이터를 불러왔습니다. 이후 filter를 통해서 가져오는 방식으로 조건을 줄 생각입니다.\n@app.route('/profile')\ndef profile():\n    # myname = \"seunghwan\"\n    # myphoto = \"photo\"\n    # return render_template(\"profile.html\", name=myname, photo=myphoto)\n    user = db.users.find_one({'username': '123'}, {'_id': False})\n    return render_template('profile.html', user=user)\n\n\n@app.route('/posting')\ndef posting():\n    return render_template('create_post.html')\n\n\n#################################\n##  로그인을 위한 API            ##\n#################################\n\n# [회원가입 API]\n# id, pw, nickname을 받아서, mongoDB에 저장합니다.\n# 저장하기 전에, pw를 sha256 방법(=단방향 암호화. 풀어볼 수 없음)으로 암호화해서 저장합니다.\n@app.route('/api/register', methods=['POST'])\ndef api_register():\n    id_receive = request.form['id_give']\n    pw_receive = request.form['pw_give']\n    nickname_receive = request.form['nickname_give']\n\n    pw_hash = hashlib.sha256(pw_receive.encode('utf-8')).hexdigest()\n\n    db.user.insert_one({'id': id_receive, 'pw': pw_hash, 'nick': nickname_receive})  # 이메일 추가\n\n    return jsonify({'result': 'success'})\n\n\n# [로그인 API]\n# id, pw를 받아서 맞춰보고, 토큰을 만들어 발급합니다.\n@app.route('/api/login', methods=['POST'])\ndef api_login():\n    id_receive = request.form['id_give']\n    pw_receive = request.form['pw_give']\n\n    # 회원가입 때와 같은 방법으로 pw를 암호화합니다.\n    pw_hash = hashlib.sha256(pw_receive.encode('utf-8')).hexdigest()\n\n    # id, 암호화된pw을 가지고 해당 유저를 찾습니다.\n    result = db.user.find_one({'id': id_receive, 'pw': pw_hash})\n\n    # 찾으면 JWT 토큰을 만들어 발급합니다.\n    if result is not None:\n        # JWT 토큰에는, payload와 시크릿키가 필요합니다.\n        # 시크릿키가 있어야 토큰을 디코딩(=암호화 풀기)해서 payload 값을 볼 수 있습니다.\n        # 아래에선 id와 exp를 담았습니다. 즉, JWT 토큰을 풀면 유저ID 값을 알 수 있습니다.\n        # exp에는 만료시간을 넣어줍니다. 만료시간이 지나면, 시크릿키로 토큰을 풀 때 만료되었다고 에러가 납니다.\n        payload = {\n            'id': id_receive,\n            'exp': datetime.datetime.utcnow() + datetime.timedelta(seconds=5)\n        }\n        token = jwt.encode(payload, SECRET_KEY, algorithm='HS256').decode('utf-8')\n\n        # token을 줍니다.\n        return jsonify({'result': 'success', 'token': token})\n    # 찾지 못하면\n    else:\n        return jsonify({'result': 'fail', 'msg': '아이디/비밀번호가 일치하지 않습니다.'})\n\n\n# [유저 정보 확인 API]\n# 로그인된 유저만 call 할 수 있는 API입니다.\n# 유효한 토큰을 줘야 올바른 결과를 얻어갈 수 있습니다.\n# (그렇지 않으면 남의 장바구니라든가, 정보를 누구나 볼 수 있겠죠?)\n@app.route('/api/nick', methods=['GET'])\ndef api_valid():\n    token_receive = request.cookies.get('mytoken')\n\n    # try / catch 문?\n    # try 아래를 실행했다가, 에러가 있으면 except 구분으로 가란 얘기입니다.\n\n    try:\n        # token을 시크릿키로 디코딩합니다.\n        # 보실 수 있도록 payload를 print 해두었습니다. 우리가 로그인 시 넣은 그 payload와 같은 것이 나옵니다.\n        payload = jwt.decode(token_receive, SECRET_KEY, algorithms=['HS256'])\n        print(payload)\n\n        # payload 안에 id가 들어있습니다. 이 id로 유저정보를 찾습니다.\n        # 여기에선 그 예로 닉네임을 보내주겠습니다.\n        userinfo = db.user.find_one({'id': payload['id']}, {'_id': False})\n        return jsonify({'result': 'success', 'nickname': userinfo['nick']})\n    except jwt.ExpiredSignatureError:\n        # 위를 실행했는데 만료시간이 지났으면 에러가 납니다.\n        return jsonify({'result': 'fail', 'msg': '로그인 시간이 만료되었습니다.'})\n    except jwt.exceptions.DecodeError:\n        return jsonify({'result': 'fail', 'msg': '로그인 정보가 존재하지 않습니다.'})\n\n    #################################\n    ##  메인화면을 위한 API            ##\n    #################################\n\n\n@app.route('/api/feed', methods=['GET'])\ndef api_feed():\n    all_feed = list(db.posts.find({}, {'_id': 0}))\n    jsonfeed = JSONEncoder().encode(all_feed)\n    return jsonify(jsonfeed)\n\n\n@app.route('/api/posting', methods=['POST'])\ndef create_post():\n    url_receive = request.form['url_give']\n    title_receive = request.form['title_give']\n    doc = {\n        'title': title_receive,\n        'photo': url_receive,\n        'username': '123',\n    }\n    db.posts.insert_one(doc)\n    return jsonify({'msg': \"저장 완료\"})\n\n    #################################\n    ##  프로필화면을 위한 API            ##\n    #################################\n\n\nif __name__ == '__main__':\n    app.run('0.0.0.0', port=5002, debug=True)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 2d1b2710c2e4ce42a195ba8b7d92e74ffff8679d)
+++ b/app.py	(date 1640834769910)
@@ -191,4 +191,4 @@
 
 
 if __name__ == '__main__':
-    app.run('0.0.0.0', port=5002, debug=True)
+    app.run('0.0.0.0', port=5001, debug=True)
